// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<WordScreen /> should match snapshot 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#5f0c38",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
        "justifyContent": "center",
        "width": "100%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#999",
          "fontFamily": "Roboto-Light",
          "fontSize": 16,
          "marginBottom": 10,
          "marginLeft": "15%",
          "marginTop": 10,
          "width": "100%",
        }
      }
    >
      *
      Sanalista
       jatkuu vierittämällä näyttöä
    </Text>
    <RCTScrollView
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={20}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={2}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "height": 733.7,
          "marginBottom": 15,
          "marginTop": 10,
          "width": "95%",
        }
      }
      testID="flatlist"
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View />
    </RCTScrollView>
  </RCTSafeAreaView>
  <View
    accessible={true}
    focusable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#3a89ed",
        "borderRadius": 5,
        "elevation": 5,
        "margin": 0,
        "opacity": 1,
        "padding": 5,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 4,
          "width": 0,
        },
        "shadowOpacity": 0.44,
        "shadowRadius": 5,
        "width": 100,
      }
    }
    testID="button"
  >
    <Text
      style={
        Object {
          "alignSelf": "center",
          "color": "white",
          "fontFamily": "Roboto-Light",
          "fontSize": 16,
        }
      }
      testID="title"
    >
      Tallenna
    </Text>
  </View>
</View>
`;
